plugins {
    id 'java'
    id 'xyz.jpenilla.run-paper' version '2.3.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'org.evlis'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    } // PaperLib
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    } // Spigot-API
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    } // ItemsAdder
    maven {
        name = "worldedit-repo"
        url = "https://maven.enginehub.org/repo/"
    } // WorldEdit
    maven {
        name = "placeholderapi-repo"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi"
    } // PlaceholderAPI
    maven {
        name = "mcmmo-repo"
        url = "https://nexus.neetgames.com/repository/maven-public"
    } // mcMMO
    maven {
        name = "walshy-public"
        url = "https://repo.walshy.dev/public"
    } // ClearLag
    maven {
        name = "codemc-repo"
        url = "https://repo.codemc.io/repository/maven-public/"
    } // Orebfuscator
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT"
    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'
    implementation group: 'io.papermc', name: 'paperlib', version: '1.0.8'
    implementation group: 'com.github.baked-libs.dough', name: 'dough-api', version: 'baf2d79f62'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21.1")
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
